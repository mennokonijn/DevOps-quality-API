{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 6,
  "numPassedTests": 22,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTotalTestSuites": 6,
  "numTotalTests": 22,
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 1,
    "total": 1,
    "unchecked": 0,
    "uncheckedKeys": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1750245421247,
  "success": true,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "TranslatingOracle"
          ],
          "failureMessages": [],
          "fullName": "TranslatingOracle should return the answer to life, universe and everything, in the current language",
          "location": null,
          "status": "passed",
          "title": "should return the answer to life, universe and everything, in the current language"
        }
      ],
      "endTime": 1750245422920,
      "message": "",
      "name": "/home/runner/work/unit-test-examples/unit-test-examples/tests/js/TranslatingOracle.test.js",
      "startTime": 1750245422696,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should remain silent for invalid or not enough money (0)",
          "location": null,
          "status": "passed",
          "title": "should remain silent for invalid or not enough money (0)"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should remain silent for invalid or not enough money (4)",
          "location": null,
          "status": "passed",
          "title": "should remain silent for invalid or not enough money (4)"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should remain silent for invalid or not enough money (-5)",
          "location": null,
          "status": "passed",
          "title": "should remain silent for invalid or not enough money (-5)"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should remain silent for invalid or not enough money (\"\")",
          "location": null,
          "status": "passed",
          "title": "should remain silent for invalid or not enough money (\"\")"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should remain silent for invalid or not enough money (\"0\")",
          "location": null,
          "status": "passed",
          "title": "should remain silent for invalid or not enough money (\"0\")"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should remain silent for invalid or not enough money (\"4\")",
          "location": null,
          "status": "passed",
          "title": "should remain silent for invalid or not enough money (\"4\")"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should remain silent for invalid or not enough money (\"-5\")",
          "location": null,
          "status": "passed",
          "title": "should remain silent for invalid or not enough money (\"-5\")"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should remain silent for invalid or not enough money (undefined)",
          "location": null,
          "status": "passed",
          "title": "should remain silent for invalid or not enough money (undefined)"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should remain silent for invalid or not enough money (null)",
          "location": null,
          "status": "passed",
          "title": "should remain silent for invalid or not enough money (null)"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should remain silent for invalid or not enough money (true)",
          "location": null,
          "status": "passed",
          "title": "should remain silent for invalid or not enough money (true)"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should remain silent for invalid or not enough money (false)",
          "location": null,
          "status": "passed",
          "title": "should remain silent for invalid or not enough money (false)"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should remain silent for invalid or not enough money ([])",
          "location": null,
          "status": "passed",
          "title": "should remain silent for invalid or not enough money ([])"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should remain silent for invalid or not enough money ({})",
          "location": null,
          "status": "passed",
          "title": "should remain silent for invalid or not enough money ({})"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should consult the oracle for enough money (5)",
          "location": null,
          "status": "passed",
          "title": "should consult the oracle for enough money (5)"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should consult the oracle for enough money (100)",
          "location": null,
          "status": "passed",
          "title": "should consult the oracle for enough money (100)"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should consult the oracle for enough money (5)",
          "location": null,
          "status": "passed",
          "title": "should consult the oracle for enough money (5)"
        },
        {
          "ancestorTitles": [
            "FortuneTeller"
          ],
          "failureMessages": [],
          "fullName": "FortuneTeller should consult the oracle for enough money (100)",
          "location": null,
          "status": "passed",
          "title": "should consult the oracle for enough money (100)"
        }
      ],
      "endTime": 1750245422999,
      "message": "",
      "name": "/home/runner/work/unit-test-examples/unit-test-examples/tests/js/FortuneTeller.test.js",
      "startTime": 1750245422681,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "<Answer />"
          ],
          "failureMessages": [],
          "fullName": "<Answer /> should render an answer according to the passed props",
          "location": null,
          "status": "passed",
          "title": "should render an answer according to the passed props"
        }
      ],
      "endTime": 1750245423058,
      "message": "",
      "name": "/home/runner/work/unit-test-examples/unit-test-examples/tests/js/Answer.test.js",
      "startTime": 1750245422762,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "<ReactOracle />"
          ],
          "failureMessages": [],
          "fullName": "<ReactOracle /> should render list of answers passed props",
          "location": null,
          "status": "passed",
          "title": "should render list of answers passed props"
        }
      ],
      "endTime": 1750245423111,
      "message": "",
      "name": "/home/runner/work/unit-test-examples/unit-test-examples/tests/js/ReactOracle.test.js",
      "startTime": 1750245423007,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "Oracle"
          ],
          "failureMessages": [],
          "fullName": "Oracle should return the answer to life, universe and everything",
          "location": null,
          "status": "passed",
          "title": "should return the answer to life, universe and everything"
        }
      ],
      "endTime": 1750245423143,
      "message": "",
      "name": "/home/runner/work/unit-test-examples/unit-test-examples/tests/js/Oracle.test.js",
      "startTime": 1750245423074,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [
            "getAnswer"
          ],
          "failureMessages": [],
          "fullName": "getAnswer should return the answer to life, universe and everything",
          "location": null,
          "status": "passed",
          "title": "should return the answer to life, universe and everything"
        }
      ],
      "endTime": 1750245423190,
      "message": "",
      "name": "/home/runner/work/unit-test-examples/unit-test-examples/tests/js/functions.test.js",
      "startTime": 1750245423124,
      "status": "passed",
      "summary": ""
    }
  ],
  "wasInterrupted": false,
  "coverageMap": {
    "/home/runner/work/unit-test-examples/unit-test-examples/tests/js/setupTests.js": {
      "path": "/home/runner/work/unit-test-examples/unit-test-examples/tests/js/setupTests.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 4
          }
        }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 6
      },
      "f": {},
      "b": {},
      "_coverageSchema": "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c",
      "hash": "d1d95e640bbb65ad28b7d833670584ed7aa4dbcd"
    },
    "/home/runner/work/unit-test-examples/unit-test-examples/src/js/TranslatingOracle.js": {
      "path": "/home/runner/work/unit-test-examples/unit-test-examples/src/js/TranslatingOracle.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 10,
            "column": 2
          },
          "end": {
            "line": 10,
            "column": 67
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 9,
              "column": 1
            },
            "end": {
              "line": 9,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 9,
              "column": 10
            },
            "end": {
              "line": 11,
              "column": 2
            }
          },
          "line": 9
        }
      },
      "branchMap": {},
      "s": {
        "0": 1
      },
      "f": {
        "0": 1
      },
      "b": {},
      "_coverageSchema": "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c",
      "hash": "8d8d9eb50d01f07eab1778c3f618a5a70f2df6ea"
    },
    "/home/runner/work/unit-test-examples/unit-test-examples/src/js/FortuneTeller.js": {
      "path": "/home/runner/work/unit-test-examples/unit-test-examples/src/js/FortuneTeller.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 10,
            "column": 2
          },
          "end": {
            "line": 10,
            "column": 23
          }
        },
        "1": {
          "start": {
            "line": 20,
            "column": 2
          },
          "end": {
            "line": 24,
            "column": 3
          }
        },
        "2": {
          "start": {
            "line": 21,
            "column": 3
          },
          "end": {
            "line": 21,
            "column": 31
          }
        },
        "3": {
          "start": {
            "line": 23,
            "column": 3
          },
          "end": {
            "line": 23,
            "column": 13
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 9,
              "column": 1
            },
            "end": {
              "line": 9,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 9,
              "column": 23
            },
            "end": {
              "line": 11,
              "column": 2
            }
          },
          "line": 9
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 18,
              "column": 1
            },
            "end": {
              "line": 18,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 18,
              "column": 21
            },
            "end": {
              "line": 25,
              "column": 2
            }
          },
          "line": 18
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 18,
              "column": 9
            },
            "end": {
              "line": 18,
              "column": 18
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 18,
                "column": 17
              },
              "end": {
                "line": 18,
                "column": 18
              }
            }
          ],
          "line": 18
        },
        "1": {
          "loc": {
            "start": {
              "line": 20,
              "column": 2
            },
            "end": {
              "line": 24,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 20,
                "column": 2
              },
              "end": {
                "line": 24,
                "column": 3
              }
            },
            {
              "start": {
                "line": 20,
                "column": 2
              },
              "end": {
                "line": 24,
                "column": 3
              }
            }
          ],
          "line": 20
        }
      },
      "s": {
        "0": 17,
        "1": 17,
        "2": 4,
        "3": 13
      },
      "f": {
        "0": 17,
        "1": 17
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          4,
          13
        ]
      },
      "_coverageSchema": "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c",
      "hash": "619ac1268043a25d3e8b20407f54c5149a70a91a"
    },
    "/home/runner/work/unit-test-examples/unit-test-examples/src/js/Answer.js": {
      "path": "/home/runner/work/unit-test-examples/unit-test-examples/src/js/Answer.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 3,
            "column": 15
          },
          "end": {
            "line": 11,
            "column": 1
          }
        },
        "1": {
          "start": {
            "line": 4,
            "column": 22
          },
          "end": {
            "line": 4,
            "column": 27
          }
        },
        "2": {
          "start": {
            "line": 6,
            "column": 1
          },
          "end": {
            "line": 10,
            "column": 3
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 3,
              "column": 15
            },
            "end": {
              "line": 3,
              "column": 16
            }
          },
          "loc": {
            "start": {
              "line": 3,
              "column": 28
            },
            "end": {
              "line": 11,
              "column": 1
            }
          },
          "line": 3
        }
      },
      "branchMap": {},
      "s": {
        "0": 2,
        "1": 1,
        "2": 1
      },
      "f": {
        "0": 1
      },
      "b": {},
      "_coverageSchema": "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c",
      "hash": "4aa01d10bb674ed4b86ecf9ff1db39d17c528c23"
    },
    "/home/runner/work/unit-test-examples/unit-test-examples/src/js/ReactOracle.js": {
      "path": "/home/runner/work/unit-test-examples/unit-test-examples/src/js/ReactOracle.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 7,
            "column": 22
          },
          "end": {
            "line": 7,
            "column": 32
          }
        },
        "1": {
          "start": {
            "line": 9,
            "column": 2
          },
          "end": {
            "line": 15,
            "column": 4
          }
        },
        "2": {
          "start": {
            "line": 12,
            "column": 5
          },
          "end": {
            "line": 12,
            "column": 47
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 6,
              "column": 1
            },
            "end": {
              "line": 6,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 6,
              "column": 10
            },
            "end": {
              "line": 16,
              "column": 2
            }
          },
          "line": 6
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 11,
              "column": 19
            },
            "end": {
              "line": 11,
              "column": 20
            }
          },
          "loc": {
            "start": {
              "line": 12,
              "column": 5
            },
            "end": {
              "line": 12,
              "column": 47
            }
          },
          "line": 12
        }
      },
      "branchMap": {},
      "s": {
        "0": 1,
        "1": 1,
        "2": 2
      },
      "f": {
        "0": 1,
        "1": 2
      },
      "b": {},
      "_coverageSchema": "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c",
      "hash": "b97581665bd41e169edbfb9928686f4b2e1d57d4"
    },
    "/home/runner/work/unit-test-examples/unit-test-examples/src/js/Oracle.js": {
      "path": "/home/runner/work/unit-test-examples/unit-test-examples/src/js/Oracle.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 10,
            "column": 2
          },
          "end": {
            "line": 10,
            "column": 14
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 9,
              "column": 1
            },
            "end": {
              "line": 9,
              "column": 2
            }
          },
          "loc": {
            "start": {
              "line": 9,
              "column": 10
            },
            "end": {
              "line": 11,
              "column": 2
            }
          },
          "line": 9
        }
      },
      "branchMap": {},
      "s": {
        "0": 1
      },
      "f": {
        "0": 1
      },
      "b": {},
      "_coverageSchema": "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c",
      "hash": "df2d5a71b758f8086632542548d4ea3c040e15cf"
    },
    "/home/runner/work/unit-test-examples/unit-test-examples/src/js/functions.js": {
      "path": "/home/runner/work/unit-test-examples/unit-test-examples/src/js/functions.js",
      "statementMap": {
        "0": {
          "start": {
            "line": 6,
            "column": 1
          },
          "end": {
            "line": 6,
            "column": 13
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "getAnswer",
          "decl": {
            "start": {
              "line": 5,
              "column": 16
            },
            "end": {
              "line": 5,
              "column": 25
            }
          },
          "loc": {
            "start": {
              "line": 5,
              "column": 28
            },
            "end": {
              "line": 7,
              "column": 1
            }
          },
          "line": 5
        }
      },
      "branchMap": {},
      "s": {
        "0": 1
      },
      "f": {
        "0": 1
      },
      "b": {},
      "_coverageSchema": "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c",
      "hash": "321d0297e48e1f4ab98dd9721ff2a9374f19d432"
    }
  }
}